###########################################################################
# Now add the packages one-by-one, building up the dependencies as we go
###########################################################################

include_directories ( SYSTEM ${QWT_INCLUDE_DIR} )
include_directories ( API/inc )
add_subdirectory ( API )
add_subdirectory ( MantidWidgets )
add_subdirectory ( CustomDialogs )
add_subdirectory ( CustomInterfaces )
add_subdirectory ( DesignerPlugins )
add_subdirectory ( SliceViewer )

###########################################################################
# Add a custom target to build all of the MantidQt packages
###########################################################################

if ( MSVC_IDE )
  # Add to the 'MantidQt' group in VS
  set_property ( TARGET MantidQtAPI PROPERTY FOLDER "MantidQt" )
  set_property ( TARGET MantidWidgets PROPERTY FOLDER "MantidQt" )
  set_property ( TARGET CustomDialogs PROPERTY FOLDER "MantidQt" )
  set_property ( TARGET CustomInterfaces PROPERTY FOLDER "MantidQt" )
  set_property ( TARGET DesignerPlugins PROPERTY FOLDER "MantidQt" )
  set_property ( TARGET MantidQtSliceViewer PROPERTY FOLDER "MantidQt" )
else ()
  add_custom_target ( MantidQt DEPENDS MantidQtAPI MantidWidgets 
                                       CustomDialogs CustomInterfaces MantidQtSliceViewer
  )
endif ()





###########################################################################
# Do the sip generation, for python bindings
###########################################################################

find_package ( PyQt4 REQUIRED )
find_package ( SIP REQUIRED )
separate_arguments ( PYQT4_SIP_FLAGS )

set ( SIP_SPEC ${CMAKE_CURRENT_SOURCE_DIR}/mantidqt.sip )
set ( SIP_SRC_IN ${CMAKE_CURRENT_SOURCE_DIR}/sip_mantidqt.cpp.in )
set ( SIP_SRC ${CMAKE_CURRENT_BINARY_DIR}/sip_mantidqt.cpp )
set ( SIP_SRC_AUTO siplibmantidqtpart0.cpp )

# We need to manually add all the headers that are in the sip file
# so that the dependencies are known to CMake
set ( SIP_HDRS 
	SliceViewer/inc/MantidQtSliceViewer/SliceViewer.h
)

set( SRC_UNITY_IGNORE_FILES )

###########################################################################
# Sip generated files
###########################################################################

# The code generated by sip causes compiler warnings therefore the 
# generated file is wrapped by ${SIP_SRC} and these warnings are
# disabled. In order for VS2010 to to this correctly the second
# custom command below is required

add_custom_command ( OUTPUT ${SIP_SRC_AUTO}
                     COMMAND ${SIP_EXECUTABLE}
                          -I ${PYQT4_SIP_DIR} ${PYQT4_SIP_FLAGS}
                          -c ${CMAKE_CURRENT_BINARY_DIR} -j1 -w 
                          ${SIP_SPEC}
                     DEPENDS mantidqt.sip ${SIP_HDRS}
                     COMMENT "Generating mantidqt python bindings using sip"
)

add_custom_command ( OUTPUT ${SIP_SRC}
                     COMMAND ${CMAKE_COMMAND} ARGS -E copy_if_different ${SIP_SRC_IN} ${SIP_SRC}
                     DEPENDS ${SIP_SRC_AUTO}
                     COMMENT "Generating mantidqt sip wrapper"
)                     

# Needed for sip.h header that can end up in a different place to to the main Python include directory
include_directories ( ${SIP_INCLUDE_DIR} )

# Needed for sip generated files to find includes in src
include_directories ( ${CMAKE_CURRENT_SOURCE_DIR} )

# Other folders that need to be included...
include_directories ( ${CMAKE_CURRENT_SOURCE_DIR}/SliceViewer/inc )
include_directories ( ${CMAKE_CURRENT_BINARY_DIR}/SliceViewer ) # to find the ui_*.h auto-generated files

# This creates the target library, just for python bindings
add_library ( mantidqt ${SIP_SRC} )

# ... and links to other required libs
target_link_libraries ( mantidqt MantidQtAPI QtPropertyBrowser MantidQtSliceViewer ${QT_LIBRARIES} ${QWT_LIBRARIES} )



###########################################################################
# Installation settings
###########################################################################

install ( TARGETS mantidqt DESTINATION ${LIB_DIR} )

