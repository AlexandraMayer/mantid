#include <boost/python/module.hpp>
#include <boost/python/docstring_options.hpp>
#include <boost/python/numeric.hpp>

#include "MantidPythonInterface/kernel/TypedHandler.h"

using namespace Mantid::PythonInterface;
using PropertyMarshal::TypedHandler;

// Forward declare
@EXPORT_DECLARE@

BOOST_PYTHON_MODULE(_kernel)
{
  // Doc string options - User defined, python arguments, C++ call signatures
  boost::python::docstring_options docstrings(true, true, false);
  // Use numpy arrays
  boost::python::numeric::array::set_module_and_type("numpy", "ndarray");
  
  // Map builtin type objects to appropriate handler classes for properties
  PropertyMarshal::registerHandler(&PyInt_Type, new TypedHandler<int>());
  PropertyMarshal::registerHandler(&PyBool_Type, new TypedHandler<bool>());
  PropertyMarshal::registerHandler(&PyFloat_Type, new TypedHandler<double>());
  PropertyMarshal::registerHandler(&PyString_Type, new TypedHandler<std::string>());

@EXPORT_FUNCTIONS@
}
