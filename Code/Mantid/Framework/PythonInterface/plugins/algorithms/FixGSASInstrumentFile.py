"""*WIKI* 

This algorithm is to fix some format error of GSAS instrument file generated by
algorithm SaveGSASInstrumentFile. 

== Format errors to be fixed ==
1. Make each line 80 characters before EOL


== How to use algorithm with other algorithms ==
This algorithm is designed to work with other algorithms to do Le Bail fit.  The introduction can be found in the wiki page of [[LeBailFit]].

*WIKI*"""

from mantid.api import PythonAlgorithm, AlgorithmFactory, ITableWorkspaceProperty, WorkspaceFactory, FileProperty, FileAction, MatrixWorkspaceProperty, WorkspaceProperty
from mantid.kernel import Direction, StringListValidator

import mantid.simpleapi as api

_OUTPUTLEVEL = "NOOUTPUT"

class FixGSASInstrumentFile(PythonAlgorithm):
    """ Create the input TableWorkspaces for LeBail Fitting
    """
    def category(self):
        """
        """
        return "Diffraction;Utility"

    def name(self):
        """
        """
        return "FixGSASInstrumentFile"
 
    def PyInit(self):
        """ Declare properties
        """
        self.setWikiSummary("""Fix format error in an GSAS instrument file.""")
        
        self.declareProperty(FileProperty("InputFilename","", FileAction.Load, ['.prm', '.iparam']),
                "Name of GSAS instrument file. ")

        self.declareProperty(FileProperty("OutputFilename","", FileAction.OptionalSave, ['.prm', '.iparam']),
                "Name of fixed GSAS instrument file.  In default, it will overwrite the input file. ")
        
        return
 
    def PyExec(self):
        """ Main Execution Body
        """
        # Properties
        infilename = self.getPropertyValue("InputFilename")

        outfilename = self.getPropertyValue("OutputFilename")
        if len(outfilename) == 0:
            outfilename = infilename

        # Load file to a list of string 
        try: 
            infile = open(infilename, "r")
            lines = infile.readlines()
            infile.close()
        except IOError:
            self.log().error("Error to open/read input GSAS instrument file %s. " % (infilename))
            raise IOError("Unable to open file %s" % (infilename))

        # Form the output
        wbuf = ""
        for line in lines: 
            line = line.split("\n")[0]
            wbuf += "%-80s\n" % (line)

        # Wrte
        outfile = open(outfilename, "w")
        outfile.write(wbuf)
        outfile.close()

        return



# Register algorithm with Mantid
AlgorithmFactory.subscribe(FixGSASInstrumentFile)
