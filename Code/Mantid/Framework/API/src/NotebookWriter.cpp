#include "MantidAPI/NotebookWriter.h"
#include "MantidKernel/Logger.h"
#include <fstream>


namespace {
    Mantid::Kernel::Logger g_log("NotebookWriter");
}

Json::Value NotebookWriter::codeCell(std::string string_code) {

  Json::Value cell_data;
  const Json::Value empty = Json::Value(Json::ValueType::objectValue);

  cell_data["cell_type"] = "code";
  cell_data["collapsed"] = false;
  cell_data["input"] = string_code;
  cell_data["language"] = "python";
  cell_data["metadata"] = empty;
  cell_data["outputs"] = Json::Value(Json::arrayValue);

  return cell_data;
}

Json::Value NotebookWriter::markdownCell(std::string string_text) {

  Json::Value cell_data;
  const Json::Value empty = Json::Value(Json::ValueType::objectValue);

  cell_data["cell_type"] = "markdown";
  cell_data["metadata"] = empty;
  cell_data["source"] = string_text;

  return cell_data;
}

Json::Value NotebookWriter::headerCell() {

  return markdownCell("This IPython Notebook was automatically generated by MantidPlot\n"
                          "Mantid Version: [VERSION NUMBER]");
}

Json::Value NotebookWriter::buildNotebook() {

  Json::Value output;
  const Json::Value empty = Json::Value(Json::ValueType::objectValue);

  Json::Value cells(Json::arrayValue);
  cells.append(headerCell());
  cells.append(codeCell("print \"Hello, IPython\""));

  Json::Value worksheet;
  worksheet["cells"] = cells;
  worksheet["metadata"] = empty;

  Json::Value worksheet_arr(Json::arrayValue);
  worksheet_arr.append(worksheet);

  Json::Value meta_name;
  meta_name["name"] = "example";
  output["metadata"] = meta_name;
  output["nbformat"] = 3;
  output["nbformat_minor"] = 0;
  output["worksheets"] = worksheet_arr;

  return output;
}

void NotebookWriter::writeNotebook() {

  g_log.debug() << "Reached write json file" << std::endl;
  std::string filename = "/home/jonmd/test_notebook.ipynb";
  std::ofstream out_stream;
  out_stream.open(filename);

  const Json::Value root = buildNotebook();

  Json::StyledWriter writer;
  std::string output_string = writer.write(root);

  out_stream << output_string;
  out_stream.close();

}