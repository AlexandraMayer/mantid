""" Simple script that generates references to all
needed MDEvent<X> instantiations. """
import sys
import os
import time
import datetime

topheader = """/* Auto-generated by '%s' 
 *     on %s
 *
 * DO NOT EDIT!
 */ 
 
""" % (__file__, datetime.datetime.now())
 
header = """
namespace Mantid
{
namespace MDEvents
{

""" 


footer = """
} // namespace Mantid
} // namespace MDEvents 
"""

def generate():
    print "Generating MDDeclarations.cpp"
    
    classes = ["MDEvent", "MDBox", "IMDBox", "MDEventWorkspace"]
    classes = ["MDEvent", "MDBox"]
    
    f = open("MDDeclarations.cpp", 'w');
    f.write(topheader)
    
    for c in classes:
        f.write('#include "MantidMDEvents/%s.h"\n' % c)
    
    f.write(header)
    
    for c in classes:
        f.write("\n\n")
        for nd in xrange(1,10):
            f.write("template DLLExport class %s<%d>;\n" % (c, nd) )
            
    f.write(footer)
    f.close()
    


if __name__=="__main__":
    generate()
