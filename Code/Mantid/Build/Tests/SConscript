import os
from socket import gethostname

print 'In SConscript'

libList = ['../'];
print os.name
print gethostname()
if os.name == 'nt':
	# assume this is nt
	libList.append('../../../Third_Party/lib/win32/')
else:
	#so this must be posix
	libList.append('/usr/lib/gcc/i386-redhat-linux/3.4.6/')
	if gethostname().startswith("linuxs1"):
		# linuxs1 is a 64 bit installation of linux
		libList.append('../../../Third_Party/lib/linux64/')
		
	else:
		libList.append('../../../Third_Party/lib/linux32/')


#GET LIST OF TESTS
path = '../../'
testfolder = '/test'

testsToRun = []

#get list of directories in trunk
dirList = os.listdir(path)

for fname in dirList:
	if os.path.isdir(path + fname):
		if fname != '.svn' and fname != 'LinuxBuildScripts' and fname != 'Build':
			#does folder contain /test?
			if os.path.exists(path + fname + testfolder):
				files = os.listdir(path + fname + testfolder)
				for file in files:
					if file.endswith('.h'):
						testsToRun.append('../' + fname + testfolder + '/' +  file + '\n')
			
			
		

f=open('../TestsToRun', 'w')
f.writelines(testsToRun)
f.close()

env=Environment()

f=open('../TestsToRun', 'r')

for test in f:
	doth = '../' + test.strip() 
	temp= test.split('/')
	dotcpp = temp[-1].strip().rstrip('.h') + '.cpp'
	os.popen('cxxtestgen.pl --error-printer -o ' + dotcpp + ' ' + doth)
	env.Program(dotcpp, LIBS=['Mantid', 'Get', 'g2c'], LIBPATH=libList)
	#env.Program('MyTests.cpp')
