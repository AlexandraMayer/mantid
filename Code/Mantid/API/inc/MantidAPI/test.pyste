c = Class("Mantid::API::Algorithm", "Algorithm.h")
set_policy(c.name, return_value_policy(copy_const_reference))
set_policy(c.version, return_value_policy(copy_const_reference))

d = Class("Mantid::API::FrameworkManager", "FrameworkManager.h")
set_policy(d.createAlgorithm, return_value_policy(manage_new_object))
#set_policy(d.exec, return_value_policy(manage_new_object))
set_policy(d.getWorkspace, return_value_policy(manage_new_object))

e = Class("Mantid::API::Workspace", "Workspace.h")

f = Class("Mantid::API::AlgorithmManager", "AlgorithmManager.h")
set_policy(f.Instance, return_value_policy(manage_new_object))
set_policy(f.create, return_value_policy(manage_new_object))
set_policy(f.createUnmanaged, return_value_policy(manage_new_object))

g = Class("Mantid::API::LibraryManager", "LibraryManager.h")
