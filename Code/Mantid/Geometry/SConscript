#For MantidGeometry

import os
import platform
import MantidBuild

#GET LIST OF CPPS
codeFolder = os.path.abspath('./src')
listCpps = MantidBuild.getCPPFiles(codeFolder)


#Import environment
Import('env')
myenv = env.Clone()
myenv.Append(CPPDEFINES=[('IN_MANTID_GEOMETRY',1)])

#For Windows, OpenCascade stuff is still in the main SConstruct
if platform.system() == 'Darwin':
   myenv.Append(CPPDEFINES=['HAVE_IOSTREAM','HAVE_LIMITS','HAVE_IOMANIP'])
   myenv.Append(CPPPATH=['../../Third_Party/include/OpenCascade'])

   # In Mac-land we should link to the OpenGL framework rather than
   # specific libraries
   myenv.Append(LINKFLAGS='-framework OpenGL')

elif platform.system() == 'Linux':
   opencascade_path='/opt/OpenCASCADE'
   myenv.Append(CPPPATH=opencascade_path + '/inc')
   myenv.Append(MYLIBDIRLIST=opencascade_path + '/lib64')
   myenv.Append(MYLIBDIRLIST=opencascade_path + '/lib')
   myenv.Append(LINKFLAGS='-Wl,-rpath,'+opencascade_path+'/lib64')
   myenv.Append(LINKFLAGS='-Wl,-rpath,'+opencascade_path+'/lib')

   # MG: On Ubuntu the pre-packaged OpenCascade resides in the location below. Adding this to the path
   # shouldn't have a harmful effect if it isn't there. The libraries are in standard locations
   # so the library path doesn't need to be touched
   myenv.Append(CPPPATH='/usr/include/opencascade')

   myenv.Append(MYLIBLIST=['GL','GLU'])

else:
   # Windows
   myenv.Append(MYLIBLIST=['opengl32','glu32'])
   
myenv.Append(MYLIBLIST=['TKBO','TKPrim','TKBRep','TKernel','TKTopAlgo','TKMath','TKMesh','TKG2d'])

listSharedObjects = MantidBuild.getSharedObjects(listCpps, myenv)

#BUILD CODE
shared = myenv.SharedLibrary('lib/MantidGeometry', listCpps, LIBS=myenv['MYLIBLIST'], LIBPATH=myenv['MYLIBDIRLIST'], PDB='lib/MantidGeometry.pdb')
retval = { 'shared': shared, 'sharedobjs' : listSharedObjects, 'libs': [ 'MantidGeometry' ] }
Return('retval')
