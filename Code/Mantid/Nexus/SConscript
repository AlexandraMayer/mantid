#For MantidNexus

import os
import platform
import MantidBuild

#GET LIST OF CPPS files
codeFolder = os.path.abspath('./src')
listCpps = MantidBuild.getCPPFiles(codeFolder)

#Import environment
Import('env')
myenv = env.Clone()
myenv.Append(CPPDEFINES=[('IN_MANTID_NEXUS',1),'IN_NEXUS_CPP_LIBRARY','NOMINMAX'])


if platform.system() == 'Linux':
   # Add path to nexus if necessary
   nexus_path = myenv['NEXUS_ROOT']
   if nexus_path != '':
      myenv.Append(CPPPATH=[nexus_path + 'include'])
      myenv.Append(MYLIBDIRLIST=[nexus_path + 'lib'])

# Add dependency on nexus libraries
if os.name == 'posix':
    myenv.Append(MYLIBLIST=['NeXus'])
else:
    myenv.Append(MYLIBLIST=['libNeXus-0'])

listSharedObjects = MantidBuild.getSharedObjects(listCpps, myenv)

#BUILD CODE
shared = myenv.SharedLibrary('lib/MantidNexus', listCpps, LIBS=myenv['MYLIBLIST'], LIBPATH=myenv['MYLIBDIRLIST'], PDB='lib/MantidNexus.pdb')
retval = { 'shared': shared, 'sharedobjs' : listSharedObjects, 'libs': ['MantidNexus'] }
Return('retval')
