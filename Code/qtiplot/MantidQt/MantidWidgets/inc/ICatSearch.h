
#ifndef MANTIDWIDGETS_ICATSEARCH_H_
#define MANTIDWIDGETS_ICATSEARCH_H_

//----------------------
// Includes
//----------------------
//#include "MantidQtMantidWidgets/ui_ICatSearch.h"
#include "MantidQtMantidWidgets/ui_ICatSearch.h"
#include "MantidAPI/ITableWorkspace.h"
#include "MantidQtMantidWidgets/ICatInvestigation.h"
#include "WidgetDllOption.h"

#include<QObject>
#include<QEvent>
#include <QListWidget>
#include <QCalendarWidget>

namespace MantidQt
{
namespace MantidWidgets
{
class  EXPORT_OPT_MANTIDQT_MANTIDWIDGETS ICatSearch : public QWidget
{
  Q_OBJECT

public:
  /// Default Constructor
  ICatSearch(QWidget *parent = 0);
  /// This mthod creates a ICatSearch widget
  QWidget* createSearchWidget();

   /// Name of the interface
  static std::string name() { return "ICatSearch"; }

signals:
  void error(const QString&);
private:
  /// Initialize the layout
  virtual void initLayout();
  ///populating the instrumentbox 
  void populateInstrumentBox();
  /// execute list instruments algorithm
  Mantid::API::ITableWorkspace_sptr  executeListInstruments();
  ///get start and end run numbers
  void getRunValues(double& startRun,double& endRun);
  ///get the user set start and end dates
  void getDates(QString& startDate,QString& endDate);
   /// get the user selected instrument
  void getSelectedInstrument(QString& instrName);
  /// execute the algorithm
   Mantid::API::ITableWorkspace_sptr  executeSearchByRunNumber(const double &startRun,const double &endRun,bool bCase,const std::string& instrName);

  /// this method populates the search result widget.
  void updatesearchResults(Mantid::API::ITableWorkspace_sptr & ws_sptr );
  /// save settings to registry
  void saveSettings();
  /// read settings from registry
  void readSettings();

  void closeEvent(QCloseEvent* event);

  void setparentWidget(QWidget*);
  //bool eventFilter(QObject *obj, QEvent *event);
  QWidget* getParentWidget();

  //if  casesensitive check box selected 
  bool isCaseSensitiveSearch();

private slots:
	///handler for search button
	void onSearch();
	///handler for cancel
	void onClose();

	//handler for OK button
	void onOK();
	///
	void investigationSelected(QTableWidgetItem *);
	///start date changed
	void getstartDate(const QDate& date  );
	///popup DateTime calender to select date
	void popupCalender();
 
private:
  ///The form generated by Qt Designer
  Ui::ICatSearch m_uiForm;
 
  MantidQt::MantidWidgets::ICatInvestigation* m_invstWidget;

  QWidget* m_applicationWindow;

    //pointer to object to identify starta nd end date tool button
  QObject* m_sender;

  //pointer to calender object
  QCalendarWidget* m_calendarWidget ;


};

}
}

#endif //MANTIDQTCUSTOMINTERFACES_ICATSEARCH_H_
