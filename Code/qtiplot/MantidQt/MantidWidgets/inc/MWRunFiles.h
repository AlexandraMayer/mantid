#ifndef MANTIDQTMANTIDWIDGETS_MWRUNFILES_H_
#define MANTIDQTMANTIDWIDGETS_MWRUNFILES_H_

#include "MantidQtMantidWidgets/ui_MWRunFiles.h"
#include "MantidQtMantidWidgets/MantidWidget.h"
#include "WidgetDllOption.h"
#include <QString>
#include <QSettings>
#include <QComboBox>

#include <QMessageBox>

namespace MantidQt
{
  namespace MantidWidgets
  {
    class EXPORT_OPT_MANTIDQT_MANTIDWIDGETS MWRunFiles : public MantidWidget
    {
      Q_OBJECT

    public:
      MWRunFiles(QWidget *parent=NULL, const QString prevSettingsGr="MWRunFiles/standardload", const QComboBox * const instrum=NULL, const QString label="", const QString toolTip="", const QString exts=DEFAULT_FILTER);
	  const std::vector<std::string>& getFileNames() const;
	  virtual QString getFile1() const;
	  
      signals:
	    void fileChanged();
		
    protected:
      /// The form generated by Qt Designer
      Ui::MWRunFiles m_designedWidg;
	  ///constains the name of the instrument that the runs files are for
	  QString m_instrument;
      /// contains the directory the user last selected to load a file from
	  QSettings m_prevSets;
	  /// A coma separtated list of file allowed files extensions for the input files
      const QString m_filter;
	  /// the tooltip passed to this function, information about which instrument's runs we load is added to the end of this string
	  const QString m_toolTipOrig;
	  /// An array of valid file names derived from the entries in the leNumber LineEdit
	  std::vector<std::string> m_files;

	  virtual QString openFileDia();
	  void readRunNumAndRanges();
	  void readComasAndHyphens(const std::string &in, std::vector<std::string> &out);

      static const QString DEFAULT_FILTER;
	  
	  protected slots:
        virtual void browseClicked();
	    void instrumentChange(const QString &newInstr);
		void readEntries();
	};

    class EXPORT_OPT_MANTIDQT_MANTIDWIDGETS MWRunFile : public MWRunFiles
    {
      Q_OBJECT

    public:
      /// only calls the base class constructor
	  MWRunFile(QWidget *parent=NULL, const QString prevSettingsGr="MWRunFiles/standardload", const QComboBox * const instrum=NULL, const QString label="", const QString toolTip="", const QString exts=DEFAULT_FILTER):
        MWRunFiles(parent, prevSettingsGr, instrum, label, exts) {}

	  QString getFileName() const {
	    /* need to check validation status*/
	    return getFile1();}	  
      signals:
	    void fileChanged();
	protected:
	  virtual QString openFileDia();
	
	private slots:
      void browseClicked();
	};
  }
}

#endif // MANTIDQTMANTIDWIDGETS_MWRUNFILES_H_