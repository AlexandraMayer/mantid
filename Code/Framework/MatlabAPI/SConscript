#For MantidMatlab

import os
import shutil
import re
import MantidBuild

#reject directory names that aren't like r2008a or matlab_2007a
def checkVersionInfo(dirName) :      
  dirName = dirName.lower()
  matVersPat = '(matlab_|r)\\d{4}[a-z]+'
  foundVersions = re.findall(matVersPat, dirName)
  if foundVersions :
    return foundVersions[0]
  else :
    return 'Error'

# gets what looks like the oldest version that is installed in the passed directory
def getInstallDir(baseDir) :
  allContents = os.listdir(baseDir)
  # using dictionary for case insentive sorting 
  keys = []
  paths = {}
  for dir in allContents :
    if ( checkVersionInfo(dir) != 'Error' ) :
      keys.append(dir.lower())
      paths[dir.lower()] = dir
  
  if ( len(keys) < 1 ) :
    print '--Fatal error: couldn\'t find your matlab directory.  Is it in a default locations?----'
  keys.sort()                            #the version numbers go up in alphabetical order, everything is in lower case now
  matlabDir = paths[keys[0]]              #the earliest version is this one at the start of the list, use that
  return baseDir + matlabDir
  
#GET LIST OF CPPS
codeFolder = os.path.abspath('./src')
listCpps = MantidBuild.getCPPFiles(codeFolder)
#Import environment
Import('env')
myenv = env.Clone()
myenv.Append(CPPDEFINES=[('IN_MANTID_MATLAB_API',1),('MATLAB_MEX_FILE',1)])

if os.name == 'nt' :
  # get a list of their matlab install directories, should be one directory for each installed version
  matlabPath = getInstallDir('C:/Matlab/')  #requires that matlab is in a subdirectory of this directory
  
  shutil.copy(matlabPath+'/extern/src/mwdebug.c','./src')
  myenv.Append(CPPPATH=[matlabPath+'/extern/include'])
  myenv.Append(MYLIBDIRLIST=[matlabPath+'/extern/lib/win32/microsoft'])
  myenv.Append(MYLIBLIST=['libmex', 'libmx','libmat'])
    
else:
  matlabPath = getInstallDir('/usr/local/')         #requires matlab is installed on /usr/local, there may be more than one version there
  myenv.Append(CPPPATH=[matlabPath+'/extern/include'])
  myenv.Append(MYLIBDIRLIST=[matlabPath+'/bin/glnxa64'])
  myenv.Append(MYLIBLIST=['mex'])

listSharedObjects = MantidBuild.getSharedObjects(listCpps, myenv)

#BUILD CODE
shared_sources=listCpps[:]
shared_sources.append('linkoptions.def')
shared_sources.append('src/mwdebug.c')
shared = myenv.SharedLibrary('lib/MantidMatlabAPI', shared_sources, LIBS=myenv['MYLIBLIST'], LIBPATH=myenv['MYLIBDIRLIST'], PDB='lib/MantidMatlabAPI.pdb')
retval = { 'shared': shared, 'sharedobjs' : listSharedObjects, 'libs': [ 'MantidMatlabAPI' ] }
Clean(shared, 'src/mwdebug.c')
Return('retval')
