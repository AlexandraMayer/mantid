#!/bin/sh
# 
# Supports the git finish command
#
# Copyright 2013 ISIS Rutherford Appleton Laboratory & NScD Oak Ridge National Laboratory
#
# This file is part of Mantid.
#
# Mantid is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# Mantid is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# File change history is stored at: <https://github.com/mantidproject/mantid>

# Set top-level command name
CMD_NAME="finish"
# Branch that the build servers see
BUILDER_BRANCH="develop"

# Get directory of this file
# The sed expression here replaces all backslashes by forward slashes.
# This helps our Windows users, while not bothering our Unix users.
export CMDFILE_DIR=$(dirname "$(echo "$0" | sed -e 's@\\@/@g')")

usage() {
    echo "Usage: git ${CMD_NAME} [SWITCHES]"
    echo "Nominally 'finishes' the current branch. In reality this simply means pushing pushing"
    echo "the branch to origin so that it can be tested. If it is detected that some commits on"
    echo "this branch have not been merged to develop first, it prints a warning to do so."
    echo
    echo "The current branch must not be master or ${BUILDER_BRANCH}, if it is then the script"
    echo "aborts. "
    echo
    echo "Equivalent to:"    
    echo "  git push origin <branchname>"
    echo
    echo "Switches:"
    echo "  -h  Prints this help"

}

checkargs() {
    # Can't use getopt cross-platform
    if [ ! $# -eq 0 ]; then
        usage
    exit 1
    fi
}

main() {
    # Helper functions
    . "${CMDFILE_DIR}/gitworkflow-helpers"
    
    checkargs "$@"

    # Sanity check
    currentbranch=$(current_branch)
    if [ ${currentbranch} = "${BUILDER_BRANCH}" -o ${currentbranch} = "master" ]; then
        echo "Current branch is ${current}, do not use git ${CMD_NAME} to push ${current}."
        exit 1
    fi

    # Require a clean state, i.e. no local modifications
    local_modifications
    if [ $? -eq 1 ]; then
        echo "You have local modifications, it does not look like you are finished. Either:"
        echo " 1) Commit the changes and rerun this command or"
        echo " 2) Run 'git stash' and then rerun this command. This will NOT include them in changes on the branch."
        exit 1
    fi
    
    # Check whether this branch is fulled merged to develop and warn that "git checkbuild" should be run first
    
    
    # Run the macro
    run_git push origin ${currentbranch}
}

main "$@"
